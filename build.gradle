plugins {
    id "org.jetbrains.kotlin.multiplatform" version "$kotlin_version"
    id "org.jetbrains.kotlin.plugin.serialization" version "$kotlin_version"
}

group "me.shedaniel"
version = "1.0." + (System.getenv("GITHUB_RUN_NUMBER") == null ? "9999" : System.getenv("GITHUB_RUN_NUMBER"))

repositories {
    mavenCentral()
    maven { url "https://dl.bintray.com/suparnatural/kotlin-multiplatform" }
    maven {
        url "https://maven.fabricmc.net"
        content {
            includeGroup "net.fabricmc"
        }
    }
}

kotlin {
    targets.all {
        compilations.all {
            kotlinOptions {
                freeCompilerArgs = ["-Xopt-in=kotlin.RequiresOptIn"]
                suppressWarnings = true
            }
        }
    }
    jvm {
        compilations.all {
            kotlinOptions.jvmTarget = "1.8"
        }
        testRuns["test"].executionTask.configure {
            useJUnitPlatform()
        }
    }
    def hostOs = System.getProperty("os.name")
    def nativeTarget
    if (hostOs == "Mac OS X") nativeTarget = macosX64("native")
    else if (hostOs == "Linux") nativeTarget = linuxX64("native")
    else if (hostOs.startsWith("Windows")) nativeTarget = mingwX64("native")
    else throw new GradleException("Host OS is not supported in Kotlin/Native.")

    nativeTarget.tap {
        compilations.main {
            cinterops {
            }
        }
    }

    sourceSets {
        commonMain {
            dependencies {
                implementation "org.jetbrains.kotlinx:kotlinx-serialization-json:$kotlin_serialization_version"
                implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$kotlin_version"
                implementation "com.soywiz.korlibs.korio:korio:$korlibs_version"
                implementation "io.github.microutils:kotlin-logging:$kotlin_logging_version"
                implementation "com.squareup.okio:okio-multiplatform:$okio_version"
            }
        }
        commonTest {
            dependencies {
                implementation kotlin("test-common")
                implementation kotlin("test-annotations-common")
            }
        }
        jvmMain {
            dependencies {
                implementation "net.fabricmc:stitch:0.4.6+build.74:all"
                implementation "org.dom4j:dom4j:2.1.3"
            }
        }
        jvmTest {
            dependencies {
                implementation kotlin("test-junit5")
                implementation "org.junit.jupiter:junit-jupiter-api:5.6.0"
                runtimeOnly "org.junit.jupiter:junit-jupiter-engine:5.6.0"
            }
        }
        nativeMain {
            dependencies {
                implementation "io.ktor:ktor-client-core:$ktor_version"
                implementation "io.ktor:ktor-client-curl:$ktor_version"
            }
        }
        nativeTest {
        }
        all {
            languageSettings.enableLanguageFeature("InlineClasses")
        }
    }
    
    
}
